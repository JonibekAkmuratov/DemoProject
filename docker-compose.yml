
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: demo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d  # Optional: SQL init scripts
    ports:
      - "5432:5432"
    networks:
      - demo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d demo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  demo-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demo-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/demo
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root123
      - JWT_SECRET=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
    ports:
      - "8080:8080"
    volumes:
      - app_logs:/app/logs
      - temp_files:/tmp
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: demo-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx (Optional - reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: demo-nginx
    restart: unless-stopped
    depends_on:
      - demo-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl  # SSL certificates
    networks:
      - demo-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  temp_files:
    driver: local

networks:
  demo-network:
    driver: bridge